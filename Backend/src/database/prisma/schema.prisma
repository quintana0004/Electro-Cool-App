// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Company {
  id           String        @id @default(uuid()) @db.Uuid
  name         String        @unique @db.VarChar(255)
  businessType String        @db.VarChar(150)
  addressLine1 String        @db.VarChar(255)
  addressLine2 String?       @db.VarChar(255)
  country      String        @db.VarChar(100)
  state        String?       @db.VarChar(50)
  city         String        @db.VarChar(100)
  zipcode      String        @db.VarChar(10)
  email        String?       @db.VarChar(255)
  phone        String?       @db.VarChar(15)
  createdDate  DateTime      @default(now()) @db.Timestamptz(6)
  lastModified DateTime      @default(now()) @db.Timestamptz(6)
  cars         Car[]
  customers    Customer[]
  invoices     Invoice[]
  jobOrders    JobOrder[]
  users        User[]
  payments     Payment[]
  appointments Appointment[]
  tasks        Task[]
}

model User {
  id           String   @id @default(uuid()) @db.Uuid
  firstName    String   @db.VarChar(255)
  lastName     String   @db.VarChar(255)
  gender       String   @db.VarChar(10)
  age          Int
  phone        String   @db.VarChar(15)
  email        String   @db.VarChar(255)
  username     String   @db.VarChar(255)
  password     String   @db.VarChar(255)
  salt         String   @db.VarChar(255)
  accessToken  String   @db.VarChar(255)
  refreshToken String   @db.VarChar(255)
  role         String   @db.VarChar(255)
  createdDate  DateTime @default(now()) @db.Timestamptz(6)
  lastModified DateTime @default(now()) @db.Timestamptz(6)
  companyId    String   @db.Uuid
  company      Company  @relation(fields: [companyId], references: [id], onDelete: Cascade)
}

model Customer {
  id           Int        @id @default(autoincrement())
  firstName    String     @db.VarChar(255)
  lastName     String     @db.VarChar(255)
  addressLine1 String     @db.VarChar(255)
  addressLine2 String?    @db.VarChar(255)
  state        String?    @db.VarChar(50)
  city         String     @db.VarChar(100)
  phone        String     @db.VarChar(15)
  email        String?    @db.VarChar(255)
  createdDate  DateTime   @default(now()) @db.Timestamptz(6)
  lastModified DateTime   @default(now()) @db.Timestamptz(6)
  companyId    String     @db.Uuid
  company      Company    @relation(fields: [companyId], references: [id], onDelete: Cascade)
  cars         Car[]
  invoices     Invoice[]
  jobOrders    JobOrder[]
  deposits     Deposit[]
}

model Car {
  id                  Int        @id @default(autoincrement())
  brand               String     @db.VarChar(100)
  licensePlate        String     @unique @db.VarChar(20)
  model               String     @db.VarChar(100)
  year                String     @db.VarChar(4)
  mileage             String     @db.VarChar(10)
  color               String     @db.VarChar(50)
  vinNumber           String     @unique @db.VarChar(20)
  carHasItems         Boolean
  carItemsDescription String?
  createdDate         DateTime   @default(now()) @db.Timestamptz(6)
  lastModified        DateTime   @default(now()) @db.Timestamptz(6)
  companyId           String     @db.Uuid
  company             Company    @relation(fields: [companyId], references: [id], onDelete: NoAction)
  customerId          Int
  customer            Customer   @relation(fields: [customerId], references: [id], onDelete: NoAction)
  jobOrders           JobOrder[]
  deposits            Deposit[]
  invoices            Invoice[]
}

model JobOrder {
  id               Int      @id @default(autoincrement())
  requestedService String   @db.VarChar(255)
  serviceDetails   String
  status           String   @db.VarChar(100)
  jobLoadType      String   @db.VarChar(100)
  policySignature  String   @db.VarChar(255)
  createdDate      DateTime @default(now()) @db.Timestamptz(6)
  lastModified     DateTime @default(now()) @db.Timestamptz(6)
  carId            Int
  car              Car      @relation(fields: [carId], references: [id], onDelete: Cascade)
  companyId        String   @db.Uuid
  company          Company  @relation(fields: [companyId], references: [id], onDelete: Cascade)
  customerId       Int
  customer         Customer @relation(fields: [customerId], references: [id], onDelete: Cascade)
}

model Invoice {
  id           Int            @id @default(autoincrement())
  status       String         @db.VarChar(100)
  totalPrice   String         @db.VarChar(50)
  amountPaid   String         @db.VarChar(50)
  amountDue    String         @db.VarChar(50)
  createdDate  DateTime       @default(now()) @db.Timestamptz(6)
  lastModified DateTime       @default(now()) @db.Timestamptz(6)
  companyId    String         @db.Uuid
  company      Company        @relation(fields: [companyId], references: [id], onDelete: Cascade)
  customerId   Int
  customer     Customer       @relation(fields: [customerId], references: [id], onDelete: Cascade)
  carId        Int
  car          Car            @relation(fields: [carId], references: [id], onDelete: Cascade)
  invoiceItems Invoice_Item[]
  deposits     Deposit[]
  payments     Payment[]
}

model Invoice_Item {
  id           Int      @id @default(autoincrement())
  description  String
  quantity     String   @db.VarChar(10)
  unitPrice    String   @db.VarChar(20)
  totalPrice   String   @db.VarChar(20)
  warranty     String   @db.VarChar(20)
  createdDate  DateTime @default(now()) @db.Timestamptz(6)
  lastModified DateTime @default(now()) @db.Timestamptz(6)
  invoiceId    Int
  invoice      Invoice  @relation(fields: [invoiceId], references: [id], onDelete: NoAction)
}

model Deposit {
  id           Int      @id @default(autoincrement())
  amount       String   @db.VarChar(20)
  description  String
  isAvailable  Boolean
  createdDate  DateTime @default(now()) @db.Timestamptz(6)
  lastModified DateTime @default(now()) @db.Timestamptz(6)
  customerId   Int
  customer     Customer @relation(fields: [customerId], references: [id], onDelete: Cascade)
  carId        Int
  car          Car      @relation(fields: [carId], references: [id], onDelete: Cascade)
  invoiceId    Int?
  invoice      Invoice? @relation(fields: [invoiceId], references: [id], onDelete: NoAction)
}

model Payment {
  id                Int      @id @default(autoincrement())
  type              String   @db.VarChar(100)
  amountPaid        String   @db.VarChar(20)
  bankStatus        String   @db.VarChar(20)
  bankFrontEvidence String   @db.VarChar(255)
  bankBackEvidence  String   @db.VarChar(255)
  athEvidence       String   @db.VarChar(255)
  referenceNumber   String   @db.VarChar(255)
  createdDate       DateTime @default(now()) @db.Timestamptz(6)
  lastModified      DateTime @default(now()) @db.Timestamptz(6)
  companyId         String   @db.Uuid
  company           Company  @relation(fields: [companyId], references: [id], onDelete: Cascade)
  invoiceId         Int
  invoice           Invoice  @relation(fields: [invoiceId], references: [id], onDelete: NoAction)
}

model Appointment {
  id              Int      @id @default(autoincrement())
  service         String   @db.VarChar(255)
  description     String
  arrivalDateTime DateTime @db.Timestamptz(6)
  model           String   @db.VarChar(255)
  licensePlate    String   @db.VarChar(255)
  customerName    String   @db.VarChar(255)
  phone           String   @db.VarChar(10)
  email           String   @db.VarChar(255)
  createdDate     DateTime @default(now()) @db.Timestamptz(6)
  lastModified    DateTime @default(now()) @db.Timestamptz(6)
  companyId       String   @db.Uuid
  company         Company  @relation(fields: [companyId], references: [id], onDelete: NoAction)
}

model Task {
  id           Int      @id @default(autoincrement())
  text         String
  createdDate  DateTime @default(now()) @db.Timestamptz(6)
  lastModified DateTime @default(now()) @db.Timestamptz(6)
  companyId    String   @db.Uuid
  company      Company  @relation(fields: [companyId], references: [id], onDelete: NoAction)
}
